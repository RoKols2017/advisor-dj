<#
.SYNOPSIS
    –≠–∫—Å–ø–æ—Ä—Ç —Å–æ–±—ã—Ç–∏–π –ø–µ—á–∞—Ç–∏ (Event ID 307) –≤ JSON —Å —É—á—ë—Ç–æ–º –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—É—Å–∫–∞.

.DESCRIPTION
    –°–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∏–ª–∏ –≤—Ä—É—á–Ω—É—é.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã -Start –∏ -End, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∞–π–ª-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–≥—Ä—É–∑–∫—É –≤ JSON-—Ñ–∞–π–ª —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∏–º–µ–Ω–µ–º –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞.
    –î–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ –≤–Ω–µ–¥—Ä—ë–Ω 1-–º–∏–Ω—É—Ç–Ω—ã–π –±—É—Ñ–µ—Ä, –∏—Å–∫–ª—é—á–∞—é—â–∏–π –ø–æ—Ç–µ—Ä—é —Å–æ–±—ã—Ç–∏–π.
    –í—Å–µ —Ä–∞—Å—á—ë—Ç—ã –≤–µ–¥—É—Ç—Å—è –≤–æ –≤—Ä–µ–º–µ–Ω–∏ UTC, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞.

.PARAMETER Start
    (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601, –Ω–∞–ø—Ä–∏–º–µ—Ä "2025-03-25T06:00:00"

.PARAMETER End
    (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601, –Ω–∞–ø—Ä–∏–º–µ—Ä "2025-03-25T18:00:00"

.NOTES
    - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ 307 –∏–∑ –ª–æ–≥–∞ "Microsoft-Windows-PrintService/Operational"
    - –°–æ–±—ã—Ç–∏—è —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ TimeCreated —Å —É—á—ë—Ç–æ–º UTC
    - last_run.txt –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    - –î—É–±–ª–∏ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è (1 –º–∏–Ω—É—Ç–∞ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è)
    - –í—ã—Ö–æ–¥–Ω–æ–π JSON —Å–æ–¥–µ—Ä–∂–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π JobID (SHA256 –æ—Ç –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π)
#>

param (
    [string]$Start,
    [string]$End
)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
$OutputDir = "C:\Temp"
$LastRunFile = Join-Path $OutputDir "last_run.txt"

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç ===
$now = (Get-Date).ToUniversalTime()
$startTime = $null
$endTime = $null

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
if ($Start -and $End) {
    try {
        $startTime = [DateTime]::Parse($Start).ToUniversalTime()
        $endTime   = [DateTime]::Parse($End).ToUniversalTime()
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
        exit 1
    }
}
# –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º last_run.txt
elseif (Test-Path $LastRunFile) {
    try {
        $lastRunText = Get-Content $LastRunFile -Raw
        $startTime = [DateTime]::Parse($lastRunText).ToUniversalTime()
        $endTime = $now
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ last_run.txt"
        exit 1
    }
}
# –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –≤—ã–≥—Ä—É–∂–∞–µ–º –≤—Å—ë
else {
    Write-Host "‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∏ —Ñ–∞–π–ª last_run.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞."
    $startTime = [DateTime]"2000-01-01T00:00:00Z"
    $endTime = $now
}

# === –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ===
$filenamePrefix = $startTime.ToString("yyyy-MM-dd-HH-mm")
$outputFile = Join-Path $OutputDir "$filenamePrefix-prn-event.json"

Write-Host "üì§ –î–∏–∞–ø–∞–∑–æ–Ω: $startTime UTC ‚û° $endTime UTC"
Write-Host "üìÅ –§–∞–π–ª –≤—ã–≥—Ä—É–∑–∫–∏: $outputFile"

# === –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π ===
$events = Get-WinEvent -LogName "Microsoft-Windows-PrintService/Operational" -FilterXPath "*[System[(EventID=307)]]" |
    Where-Object {
        $_.TimeCreated.ToUniversalTime() -ge $startTime -and $_.TimeCreated.ToUniversalTime() -le $endTime
    } |
    ForEach-Object {
        $xml = [xml]$_.ToXml()

        $time     = $_.TimeCreated
        $user     = $xml.Event.UserData.DocumentPrinted.Param3
        $docName  = $xml.Event.UserData.DocumentPrinted.Param2
        $printer  = $xml.Event.UserData.DocumentPrinted.Param5
        $computer = $xml.Event.UserData.DocumentPrinted.Param4
        $port     = $xml.Event.UserData.DocumentPrinted.Param6
        $bytes    = [int]$xml.Event.UserData.DocumentPrinted.Param7
        $pages    = [int]$xml.Event.UserData.DocumentPrinted.Param8

        $hashInput = "$($time.ToUniversalTime().ToString('s'))|$user|$docName|$printer"
        $hashBytes = [System.Text.Encoding]::UTF8.GetBytes($hashInput)
        $sha256 = [System.Security.Cryptography.SHA256]::Create()
        $hash = [System.BitConverter]::ToString($sha256.ComputeHash($hashBytes)) -replace "-", ""

        [PSCustomObject]@{
            TimeCreated  = $time
            Param1       = $null
            Param2       = $docName
            Param3       = $user
            Param4       = $computer
            Param5       = $printer
            Param6       = $port
            Param7       = $bytes
            Param8       = $pages
            JobID        = $hash
        }
    }

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON ===
if ($events.Count -gt 0) {
    $events | ConvertTo-Json -Depth 3 | Set-Content -Path $outputFile -Encoding UTF8
    Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω–æ: $($events.Count) —Å–æ–±—ã—Ç–∏–π"

    # –û–±–Ω–æ–≤–ª—è–µ–º last_run.txt —Å –±—É—Ñ–µ—Ä–æ–º -1 –º–∏–Ω—É—Ç–∞
    $newStartTime = $endTime.AddMinutes(-1)
    $newStartTime.ToString("yyyy-MM-ddTHH:mm:ssZ") | Set-Content -Path $LastRunFile -Encoding UTF8
    Write-Host "üìå –û–±–Ω–æ–≤–ª—ë–Ω —Ñ–∞–π–ª last_run.txt: $newStartTime (UTC -1–º)"
}
else {
    Write-Host "‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ."
}
