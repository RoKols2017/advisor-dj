[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py313"
line-length = 120
select = ["E", "F", "I", "B", "UP", "C4", "SIM", "TCH"]
ignore = ["E501", "B008", "B006"]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "migrations",
    "staticfiles",
    "htmlcov",
    ".pytest_cache",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S106", "S108"]
"manage.py" = ["T201"]

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
  | staticfiles
  | htmlcov
  | \.pytest_cache
)/
'''

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "django.*",
    "factory.*",
    "hypothesis.*",
    "watchdog.*",
    "tablib.*",
    "crispy_forms.*",
    "django_bootstrap5.*",
    "django_tables2.*",
    "django_filters.*",
    "import_export.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["."]
omit = [
    "*/migrations/*",
    "manage.py",
    "wsgi.py",
    "asgi.py",
    "*/settings/*",
    "*/venv/*",
    "*/env/*",
    ".venv/*",
    "*/staticfiles/*",
    "*/htmlcov/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
